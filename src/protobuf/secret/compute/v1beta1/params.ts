// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: secret/compute/v1beta1/params.proto

/* eslint-disable */
import Long from "long";
import * as _m0 from "protobufjs/minimal";

export const protobufPackage = "secret.compute.v1beta1";

/** Params defines the parameters for the compute module. */
export interface Params {
  /**
   * CompileCost is how much SDK gas we charge *per byte* for compiling WASM
   * code.
   */
  compile_cost: string;
  /** MaxContractSize is the maximum size of contract to store in bytes. */
  max_contract_size: string;
}

function createBaseParams(): Params {
  return { compile_cost: "", max_contract_size: "0" };
}

export const Params = {
  encode(message: Params, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.compile_cost !== "") {
      writer.uint32(10).string(message.compile_cost);
    }
    if (message.max_contract_size !== "0") {
      writer.uint32(16).uint64(message.max_contract_size);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): Params {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseParams();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.compile_cost = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.max_contract_size = longToString(reader.uint64() as Long);
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): Params {
    return {
      compile_cost: isSet(object.compile_cost) ? globalThis.String(object.compile_cost) : "",
      max_contract_size: isSet(object.max_contract_size) ? globalThis.String(object.max_contract_size) : "0",
    };
  },

  toJSON(message: Params): unknown {
    const obj: any = {};
    if (message.compile_cost !== "") {
      obj.compile_cost = message.compile_cost;
    }
    if (message.max_contract_size !== "0") {
      obj.max_contract_size = message.max_contract_size;
    }
    return obj;
  },

  create(base?: DeepPartial<Params>): Params {
    return Params.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<Params>): Params {
    const message = createBaseParams();
    message.compile_cost = object.compile_cost ?? "";
    message.max_contract_size = object.max_contract_size ?? "0";
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function longToString(long: Long) {
  return long.toString();
}

if (_m0.util.Long !== Long) {
  _m0.util.Long = Long as any;
  _m0.configure();
}

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}
